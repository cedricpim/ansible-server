---
- name: "install Nginx and ssl-cert"
  apt:
    name: "{{ item }}"
    default_release: "{{ ansible_distribution_release }}-backports"
    state: "latest"
  with_items:
    - "nginx"
    - "ssl-cert"

- name: "create {{ webserver_nginx_user }} user"
  user:
    name: "{{ webserver_nginx_user }}"
    shell: "/bin/false"
    createhome: no
    state: "present"

- name: "create {{ webserver_nginx_content_directory }} directory"
  file:
    path: "{{ webserver_nginx_content_directory }}/html"
    owner: "{{ webserver_nginx_user }}"
    group: "{{ webserver_nginx_user }}"
    mode: "0755"
    state: "directory"
  register: nginx_content_directory

- name: "copy main page placeholder"
  template:
    src: "index.html.j2"
    dest: "{{ webserver_nginx_content_directory }}/html/index.html"
    owner: "{{ webserver_nginx_user }}"
    group: "{{ webserver_nginx_user }}"
    mode: "0644"
    force: no

- name: "set permissions of {{ webserver_nginx_content_directory }}"
  file:
    path: "{{ webserver_nginx_content_directory }}"
    owner: "{{ webserver_nginx_user }}"
    group: "{{ webserver_nginx_user }}"
    state: "directory"
    recurse: yes
  when: nginx_content_directory is defined and nginx_content_directory.changed

- name: "ensure {{ webserver_nginx_log_directory }} permissions are set"
  file:
    path: "{{ webserver_nginx_log_directory }}"
    owner: "{{ webserver_nginx_user }}"
    group: "{{ webserver_nginx_user }}"
    mode: "0755"
    state: "directory"

- name: "check if DHE parameter exists"
  stat:
    path: "{{ webserver_nginx_ssl_dhparam }}"
  register: dhe_parameter

- name: "generate a stronger DHE parameter"
  command: "openssl dhparam -out {{ webserver_nginx_ssl_dhparam }} 4096"
  when: dhe_parameter is defined and dhe_parameter.stat.islnk is not defined

- name: "copy main settings"
  template:
    src: "nginx.conf.j2"
    dest: "{{ webserver_nginx_config_directory }}/nginx.conf"
    mode: "0644"
  notify: "reload Nginx"

- name: "create Nginx directories for individual configurations"
  file:
    path: "{{ item }}"
    mode: "0755"
    state: "directory"
  with_items:
    - "{{ webserver_nginx_config_directory }}/conf.d"
    - "{{ webserver_nginx_config_directory }}/conf"

- name: "check for Let's Encrypt certificates"
  stat:
    path: "{{ webserver_letsencrypt_config_directory }}/live/{{ server }}/cert.pem"
  register: letsencrypt_cert

- name: "copy default server settings without certificates"
  template:
    src: "conf.d/default-without-certificates.conf.j2"
    dest: "{{ webserver_nginx_config_directory }}/conf.d/default.conf"
    mode: "0644"
  notify: "reload Nginx"
  when: letsencrypt_cert is defined and letsencrypt_cert.stat.islnk is defined

- name: "copy default server settings with certificates"
  template:
    src: "conf.d/default-with-certificates.conf.j2"
    dest: "{{ webserver_nginx_config_directory }}/conf.d/default.conf"
    mode: "0644"
  notify: "reload Nginx"
  when: letsencrypt_cert is defined and letsencrypt_cert.stat.islnk is not defined

# FIX: https://bugs.launchpad.net/ubuntu/+source/nginx/+bug/1581864
- name: "override Nginx service"
  block:
    - file: path="{{ systemd_directory }}/nginx.service.d" owner="root" group="root" mode="0755" state="directory"
    - template: src="systemd/override.conf.j2" dest="{{ systemd_directory }}/nginx.service.d/override.conf" owner="root" group="root" mode="0644"
      register: nginx_override

- name: "restart Nginx"
  systemd:
    name: "nginx"
    state: "restarted"
    daemon_reload: yes
  when: nginx_override is defined and nginx_override is changed

- name: "enable/start Nginx"
  systemd:
    name: "nginx"
    state: "started"
    enabled: yes
