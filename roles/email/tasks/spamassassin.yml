---
- name: "install SpamAssassin"
  apt:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - "spamassassin"
    - "spamass-milter"
  register: spamassassin_package

- name: "install Pyzor add-ons"
  apt:
    name: "pyzor"
    state: "latest"
  register: pyzor_package

- name: "install Razor add-ons"
  apt:
    name: "razor"
    state: "latest"
  register: razor_package

- name: "create SpamAssassin user"
  user:
    name: "{{ email_spamassassin_user }}"
    home: "{{ email_spamassassin_home }}"
    state: "present"

- name: "add SpamAssassin group to spamass-milter user"
  user:
    name: "spamass-milter"
    groups: "{{ email_spamassassin_user }}"
    append: yes
    state: "present"

- name: "copy SpamAssassin settings"
  template:
    src: "spamassassin/{{ item }}.j2"
    dest: "/etc/default/{{ item }}"
    mode: "0644"
  with_items:
    - "spamassassin"
    - "spamass-milter"
  notify:
    - "reload SpamAssassin"
    - "restart spamass-milter"

- name: "create SpamAssassin directory"
  file:
    path: "{{ email_spamassassin_config_directory }}"
    mode: "0755"
    state: "directory"

- name: "copy SpamAssassin milter settings"
  template:
    src: "spamassassin/{{ item }}.j2"
    dest: "{{ email_spamassassin_config_directory }}/{{ item }}"
    mode: "0644"
  with_items:
    - "init.pre"
    - "local.cf"
  notify:
    - "reload SpamAssassin"
    - "restart spamass-milter"

- name: "create spool directory on Postfix for SpamAssassin"
  file:
    path: "{{ email_postfix_spool }}/spamassassin"
    owner: "{{ email_spamassassin_user }}"
    group: "root"
    mode: "0755"
    state: "directory"

- name: "update SpamAssassin rules"
  command: "sa-update --verbose"
  register: spamassassin_sa_update
  failed_when:
    - spamassassin_sa_update.failed
    - not "no fresh updates were available" in spamassassin_sa_update.stdout
  notify: "reload SpamAssassin"
  when: spamassassin_package is defined and spamassassin_package.changed

- name: "create global Bayesian filter and SpamAssassin Add-on folders"
  file:
    path: "{{ email_spamassassin_home }}/{{ item }}"
    owner: "{{ email_spamassassin_user }}"
    group: "{{ email_spamassassin_user }}"
    mode: "0755"
    state: "directory"
  with_items:
    - ".spamassassin"
    - ".razor"
    - ".pyzor"

- name: "run Pyzor add-on"
  command: "pyzor --homedir {{ email_spamassassin_home }}/.pyzor discover"
  when: pyzor_package is defined and pyzor_package.changed

- name: "run Razor add-on"
  command: "razor-admin -home={{ email_spamassassin_home }}/.razor {{ item }}"
  with_items:
    - "-register"
    - "-create"
    - "-discover"
  when: razor_package is defined and razor_package.changed

- name: "set Razor home directory"
  lineinfile:
    path: "{{ email_spamassassin_home }}/.razor/razor-agent.conf"
    line: 'razorhome = {{ email_spamassassin_home }}/.razor'
    state: "present"

- name: "set correct permissions"
  file:
    path: "{{ email_spamassassin_home }}"
    owner: "{{ email_spamassassin_user }}"
    group: "{{ email_spamassassin_user }}"
    recurse: yes

- include_role:
    name: "general"
    tasks_from: "scripts"
  vars:
    script: "slearn"

- name: "copy sa-learn systemd"
  template:
    src: "spamassassin/{{ item }}.j2"
    dest: "{{ systemd_directory }}/{{ item }}"
    mode: "0755"
  with_items:
    - "sa-learn.service"
    - "sa-learn.timer"
  notify: "restart sa-learn"

- name: "restart/Enable SpamAssassin services"
  systemd:
    name: "{{ item }}"
    state: "started"
    enabled: yes
    daemon_reload: yes
  with_items:
    - "spamassassin"
    - "spamass-milter"
    - "sa-learn.timer"

- include_role:
    name: "monit"
    tasks_from: "configure"
  vars:
    conf: "spamassassin"
